#include <iostream>
#include <vector>
#include <algorithm>
#include <iomanip>
using namespace std;

struct Student {
    string firstName;
    string lastName;
    string studentNumber;
    double midterm1;
    double midterm2;
    double finalExam;
};

vector<Student> students = {
    {"Marshall", "Appleton", "W0484141", 85, 90, 88},
    {"Patrick", "Callaghan", "W0140158", 78, 82, 79},
    {"Rebecca", "DeLorey", "W0259114", 92, 94, 96},
    {"Matthew", "Deagle", "W0258876", 67, 74, 70},
    {"Jasmine", "Fowler", "W0483304", 88, 85, 90},
    {"Bryce", "Fulton", "W0466298", 76, 79, 73},
    {"Christopher", "Hughes", "W0481348", 90, 93, 95},
    {"Kevin", "Hushard", "W0149915", 55, 60, 58},
    {"Brandon", "MacCallum", "W0487146", 68, 72, 70},
    {"Emma", "Mattie", "W0453992", 80, 85, 83},
    {"Lori", "Miller", "W0416063", 91, 89, 93},
    {"Cullen", "Murphy-Brady", "W0445014", 62, 65, 60},
    {"Tania", "Porselli", "W0485364", 85, 87, 89},
    {"Marc", "Remillard", "W0480796", 74, 78, 72},
    {"Nicholas", "Richardson", "W0482287", 88, 90, 92},
    {"Amber", "Roach", "W0198964", 70, 75, 73},
    {"Jared", "Scott", "W0463095", 81, 84, 86},
    {"Alicia", "Sekiguchi", "W0471957", 94, 96, 97},
    {"Kyle", "Slaunwhite", "W0448615", 80, 90, 90},
    {"Peter", "Vaughan", "W0211083", 79, 82, 78},
    {"Jeremy", "Whitenect", "W0487369", 85, 88, 84}
};

double weightMidterm1 = 25.0;
double weightMidterm2 = 25.0;
double weightFinal = 50.0;

void addStudent() {
    Student s;
    cout << "Enter first name: ";
    cin >> s.firstName;
    cout << "Enter last name: ";
    cin >> s.lastName;
    cout << "Enter student number: ";
    cin >> s.studentNumber;
    cout << "Enter grade for midterm #1: ";
    cin >> s.midterm1;
    cout << "Enter grade for midterm #2: ";
    cin >> s.midterm2;
    cout << "Enter grade for final exam: ";
    cin >> s.finalExam;
    students.push_back(s);
    cout << "Student added successfully.\n";
}

void printAllStudents() {
    if (students.empty()) {
        cout << "No students in the list.\n";
        return;
    }
    cout << left << setw(15) << "Last Name" 
         << setw(15) << "First Name" 
         << setw(15) << "Student Number" 
         << setw(10) << "Midterm1" 
         << setw(10) << "Midterm2" 
         << setw(10) << "Final" << endl;
    for (const auto& s : students) {
        cout << left << setw(15) << s.lastName 
             << setw(15) << s.firstName 
             << setw(15) << s.studentNumber 
             << setw(10) << s.midterm1 
             << setw(10) << s.midterm2 
             << setw(10) << s.finalExam << endl;
    }
}

void sortStudents() {
    sort(students.begin(), students.end(), [](const Student& a, const Student& b) {
        if (a.lastName == b.lastName) {
            return a.firstName < b.firstName;
        }
        return a.lastName < b.lastName;
    });
    cout << "Students sorted alphabetically by last name.\n";
}

char calculateLetterGrade(double average) {
    if (average > 90) return 'A';
    if (average > 80) return 'B';
    if (average > 70) return 'C';
    if (average > 60) return 'D';
    return 'F';
}

void printSpecificStudent() {
    string studentNumber;
    cout << "Enter the student number to search: ";
    cin >> studentNumber;
    for (const auto& s : students) {
        if (s.studentNumber == studentNumber) {
            double average = (s.midterm1 * weightMidterm1 / 100.0) + 
                             (s.midterm2 * weightMidterm2 / 100.0) + 
                             (s.finalExam * weightFinal / 100.0);
            cout << left << setw(15) << "Last Name" 
                 << setw(15) << "First Name" 
                 << setw(15) << "Student Number" 
                 << setw(10) << "Average" 
                 << setw(10) << "Grade" << endl;
            cout << left << setw(15) << s.lastName 
                 << setw(15) << s.firstName 
                 << setw(15) << s.studentNumber 
                 << setw(10) << average 
                 << setw(10) << calculateLetterGrade(average) << endl;
            return;
        }
    }
    cout << "Student not found.\n";
}

void removeStudent() {
    string studentNumber;
    cout << "Enter the student number to remove: ";
    cin >> studentNumber;
    auto it = remove_if(students.begin(), students.end(), [&studentNumber](const Student& s) {
        return s.studentNumber == studentNumber;
    });
    if (it != students.end()) {
        students.erase(it, students.end());
        cout << "Student removed successfully.\n";
    } else {
        cout << "Student not found.\n";
    }
}

void deleteAllStudents() {
    students.clear();
    cout << "All student data has been deleted.\n";
}

void setWeights() {
    cout << "Enter weight for midterm #1 (percentage): ";
    cin >> weightMidterm1;
    cout << "Enter weight for midterm #2 (percentage): ";
    cin >> weightMidterm2;
    cout << "Enter weight for final exam (percentage): ";
    cin >> weightFinal;

    if (weightMidterm1 + weightMidterm2 + weightFinal != 100.0) {
        cout << "Weights must sum to 100%. Resetting to default.\n";
        weightMidterm1 = 25.0;
        weightMidterm2 = 25.0;
        weightFinal = 50.0;
    } else {
        cout << "Weights updated successfully.\n";
    }
}

void menu() {
    int choice;
    do {
        cout << "\nStudent Information System\n";
        cout << "1. Add Student\n";
        cout << "2. Print All Students\n";
        cout << "3. Sort Students\n";
        cout << "4. Print Specific Student\n";
        cout << "5. Remove Student\n";
        cout << "6. Delete All Students\n";
        cout << "7. Set Grade Weights\n";
        cout << "8. Exit\n";
        cout << "Enter your choice: ";
        cin >> choice;

        switch (choice) {
            case 1: addStudent(); break;
            case 2: printAllStudents(); break;
            case 3: sortStudents(); break;
            case 4: printSpecificStudent(); break;
            case 5: removeStudent(); break;
            case 6: deleteAllStudents(); break;
            case 7: setWeights(); break;
            case 8: cout << "Exiting program.\n"; break;
            default: cout << "Invalid choice. Try again.\n";
        }
    } while (choice != 8);
}

int main() {
    menu();
    return 0;
}
